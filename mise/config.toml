[settings]
experimental = true

[settings.pipx]
uvx = true

[tools]
# tools
1password-cli = 'latest'
actionlint = 'latest'
argocd = 'latest'
bottom = 'latest'
cheat = 'latest'
delta = 'latest'
doctl = 'latest'
duf = 'latest'
fd = 'latest'
github-cli = 'latest'
glab = 'latest'
helm = 'latest'
k9s = 'latest'
kubectl = 'latest'
kubectx = 'latest'
kubeseal = 'latest'
kustomize = 'latest'
lazygit = 'latest'
lua-language-server = 'latest'
minikube = 'latest'
poetry = 'latest'
pre-commit = 'latest'
ripgrep = 'latest'
rust-analyzer = 'latest'
shfmt = 'latest'
stylua = 'latest'
uv = 'latest'
yamlfmt = 'latest'

# npm tools
"npm:@ast-grep/cli" = "latest"
"npm:@astrojs/language-server" = "latest"
"npm:@biomejs/biome" = "latest"
"npm:bash-language-server" = "latest"
"npm:cloc" = "latest"
"npm:cspell" = "latest"
"npm:dockerfile-language-server-nodejs" = "latest"
"npm:eslint" = "latest"
"npm:eslint_d" = "latest"
"npm:fixjson" = "latest"
"npm:graphql" = "latest"
"npm:graphql-language-service-cli" = "latest"
"npm:markdownlint-cli" = "latest"
"npm:opencollective" = "latest"
"npm:patch-package" = "latest"
"npm:pnpm" = "latest"
"npm:prettier" = "latest"
"npm:pyright" = "latest"
"npm:stylelint" = "latest"
"npm:tree-sitter-cli" = "latest"
"npm:ts-server" = "latest"
"npm:typescript" = "latest"
"npm:typescript-language-server" = "latest"
"npm:vscode-langservers-extracted" = "latest"
"npm:yaml-language-server" = "latest"

# pipx tools
"pipx:autoflake" = "latest"
"pipx:autotools-language-server" = "latest"
"pipx:basedpyright" = "latest"
"pipx:black" = "latest"
"pipx:codespell" = "latest"
"pipx:djlint" = "latest"
"pipx:flake8" = "latest"
"pipx:ipython" = "latest"
"pipx:isort" = "latest"
"pipx:mypy" = "latest"
"pipx:nox" = "latest"
"pipx:pdm" = "latest"
"pipx:pipx" = "latest"
"pipx:pytest" = "latest"
"pipx:ruff" = "latest"
"pipx:tox" = "latest"
"pipx:yamlfix" = "latest"
"pipx:yamllint" = "latest"

# runtimes (needs to be last)
deno = 'latest'
go = 'latest'
node = 'latest'
python = ['3.13', '3.12', '3.11', '3.10', '3.9']
rust = 'latest'

[tasks."prune:docker"]
description = 'Docker clean'
run = """
docker stop $(docker ps -a -q) || true
docker system prune -f
docker volume prune -a -f
"""
