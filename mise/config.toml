[settings]
experimental = true

[env]
_.path = ["~/.local/bin", "~/bin"]
EDITOR = 'nvim'
GIT_SSH = 'ssh'
PERL_LOCAL_LIB_ROOT = '{{env.HOME}}/.local/perl'
PIP_REQUIRE_VIRTUALENV = 'true'
PYTHONBREAKPOINT = 'ipdb.set_trace'
RIPGREP_CONFIG_PATH = '{{env.HOME}}/.dotfiles/rg/ripgreprc'
# python build settings
PYTHON_CFLAGS = '-march=native -mtune=native'
PYTHON_CONFIGURE_OPTS = '--enable-shared --enable-optimizations --with-lto --enable-loadable-sqlite-extensions'

[tools]
# tools
actionlint = 'latest'
argocd = 'latest'
awscli = 'latest'
bottom = 'latest'
cheat = 'latest'
cloud-sql-proxy = 'latest'
delta = 'latest'
doctl = 'latest'
duf = 'latest'
fd = 'latest'
fzf = 'latest'
gcloud = 'latest'
github-cli = 'latest'
helm = 'latest'
kube-score = 'latest'
kubectl = 'latest'
kubectx = 'latest'
kubeseal = 'latest'
kustomize = 'latest'
lazygit = 'latest'
lua-language-server = 'latest'
minikube = 'latest'
pre-commit = 'latest'
ripgrep = 'latest'
shellcheck = 'latest'
shfmt = 'latest'
stylua = 'latest'
yamlfmt = 'latest'
# npm tools
"npm:@astrojs/language-server" = "latest"
"npm:bash-language-server" = "latest"
"npm:cloc" = "latest"
"npm:cspell" = "latest"
"npm:dockerfile-language-server-nodejs" = "latest"
"npm:eslint" = "latest"
"npm:eslint_d" = "latest"
"npm:fixjson" = "latest"
"npm:graphql" = "latest"
"npm:graphql-language-service-cli" = "latest"
"npm:markdownlint-cli" = "latest"
"npm:opencollective" = "latest"
"npm:patch-package" = "latest"
"npm:pnpm" = "latest"
"npm:prettier" = "latest"
"npm:pyright" = "latest"
"npm:stylelint" = "latest"
"npm:tree-sitter-cli" = "latest"
"npm:ts-server" = "latest"
"npm:typescript" = "latest"
"npm:typescript-language-server" = "latest"
"npm:vscode-langservers-extracted" = "latest"
"npm:yaml-language-server" = "latest"
# langs
bun = 'latest'
deno = 'latest'
go = 'latest'
node = 'latest'
python = ['latest', 'sub-0.1:latest', 'sub-0.2:latest', 'sub-0.3:latest']
rust = 'latest'

[tasks."docker:prune"]
description = 'Docker clean'
run = """
sh -c "docker stop $(docker ps -a -q) || true"
docker system prune -f
docker volume prune -a -f
"""
